{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "description": "cop-topology API generated from cop-topology.yang",
        "title": "cop-topology API"
    },
    "host": "localhost:8080",
    "basePath": "/restconf",
    "schemes": [
        "http"
    ],
    "paths": {
        "/config/context/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/ContextSchema"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: context",
                "parameters": [],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve context",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContext"
            }
        },
        "/config/context/topology/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/topology/{topologyId}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: topology",
                "parameters": [],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve topology",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContextTopologyTopology"
            }
        },
        "/config/context/topology/{topologyId}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Topology"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: topology",
                "parameters": [
                    {
                        "description": "ID of topologyId",
                        "required": true,
                        "type": "string",
                        "name": "topologyId",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve topology by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContextTopologyTopologyById"
            }
        },
        "/config/context/topology/{topologyId}/nodes/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/topology/{topologyId}/nodes/{nodeId}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: nodes",
                "parameters": [
                    {
                        "description": "ID of topologyId",
                        "required": true,
                        "type": "string",
                        "name": "topologyId",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve nodes",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContextTopologyNodesNodes"
            }
        },
        "/config/context/topology/{topologyId}/nodes/{nodeId}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Node"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: nodes",
                "parameters": [
                    {
                        "description": "ID of topologyId",
                        "required": true,
                        "type": "string",
                        "name": "topologyId",
                        "in": "path"
                    },
                    {
                        "description": "ID of nodeId",
                        "required": true,
                        "type": "string",
                        "name": "nodeId",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve nodes by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContextTopologyNodesNodesById"
            }
        },
        "/config/context/topology/{topologyId}/nodes/{nodeId}/edge_end/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/topology/{topologyId}/nodes/{nodeId}/edge_end/{edgeEndId}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: edge_end",
                "parameters": [
                    {
                        "description": "ID of topologyId",
                        "required": true,
                        "type": "string",
                        "name": "topologyId",
                        "in": "path"
                    },
                    {
                        "description": "ID of nodeId",
                        "required": true,
                        "type": "string",
                        "name": "nodeId",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve edge_end",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContextTopologyNodesEdgeEndEdgeEnd"
            }
        },
        "/config/context/topology/{topologyId}/nodes/{nodeId}/edge_end/{edgeEndId}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/EdgeEnd"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: edge_end",
                "parameters": [
                    {
                        "description": "ID of topologyId",
                        "required": true,
                        "type": "string",
                        "name": "topologyId",
                        "in": "path"
                    },
                    {
                        "description": "ID of nodeId",
                        "required": true,
                        "type": "string",
                        "name": "nodeId",
                        "in": "path"
                    },
                    {
                        "description": "ID of edgeEndId",
                        "required": true,
                        "type": "string",
                        "name": "edgeEndId",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve edge_end by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContextTopologyNodesEdgeEndEdgeEndById"
            }
        },
        "/config/context/topology/{topologyId}/edges/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/topology/{topologyId}/edges/{edgeId}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: edges",
                "parameters": [
                    {
                        "description": "ID of topologyId",
                        "required": true,
                        "type": "string",
                        "name": "topologyId",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve edges",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContextTopologyEdgesEdges"
            }
        },
        "/config/context/topology/{topologyId}/edges/{edgeId}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Edge"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: edges",
                "parameters": [
                    {
                        "description": "ID of topologyId",
                        "required": true,
                        "type": "string",
                        "name": "topologyId",
                        "in": "path"
                    },
                    {
                        "description": "ID of edgeId",
                        "required": true,
                        "type": "string",
                        "name": "edgeId",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve edges by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContextTopologyEdgesEdgesById"
            }
        },
        "/config/context/service_endpoint/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/service_endpoint/{endpointId}/"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: service_endpoint",
                "parameters": [],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve service_endpoint",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContextServiceEndpointServiceEndpoint"
            }
        },
        "/config/context/service_endpoint/{endpointId}/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/ServiceEndpoint"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "description": "Retrieve operation of resource: service_endpoint",
                "parameters": [
                    {
                        "description": "ID of endpointId",
                        "required": true,
                        "type": "string",
                        "name": "endpointId",
                        "in": "path"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve service_endpoint by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveContextServiceEndpointServiceEndpointById"
            }
        },
        "/streams/update_topology/": {
            "get": {
                "schemes": [
                    "ws"
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Topology"
                        }
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: update_topology",
                "summary": "Retrieve update_topology by ID",
                "consumes": [
                    "application/json"
                ],
                "operationId": "retrieveUpdateTopologyById"
            }
        }
    },
    "definitions": {
        "Node": {
            "properties": {
                "domain": {
                    "type": "string"
                },
                "nodetype": {
                    "enum": [
                        "OF",
                        "GMPLS",
                        "OF-W",
                        "ABSTRACT",
                        "OF-IOT",
                        "HOST"
                    ],
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "edgeEnd": {
                    "items": {
                        "$ref": "#/definitions/EdgeEnd"
                    },
                    "type": "array",
                    "x-key": "edgeEndId"
                },
                "nodeId": {
                    "type": "string"
                },
                "nodeIdType": {
                    "enum": [
                        "IPv4",
                        "IPv6",
                        "DatapathID",
                        "MAC"
                    ],
                    "type": "string"
                },
                "underlayAbstractTopology": {
                    "items": {
                        "type": "string",
                        "description": "List of topology_ids which are represented by this node."
                    },
                    "type": "array"
                }
            }
        },
        "EdgeEnd": {
            "properties": {
                "switchingCap": {
                    "enum": [
                        "lsc",
                        "psc"
                    ],
                    "type": "string"
                },
                "edgeEndId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "peerNodeId": {
                    "type": "string"
                }
            }
        },
        "EthEdge": {
            "$ref": "#/definitions/Edge"
        },
        "WirelessEdge": {
            "$ref": "#/definitions/Edge"
        },
        "Bitmap": {
            "properties": {
                "arrayBits": {
                    "items": {
                        "type": "integer",
                        "format": "int16"
                    },
                    "type": "array"
                },
                "numChannels": {
                    "type": "integer",
                    "format": "int16"
                }
            }
        },
        "Edge": {
            "discriminator": "edgeType",
            "properties": {
                "latency": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "edgeId": {
                    "type": "string"
                },
                "edgeType": {
                    "enum": [
                        "dwdm_edge",
                        "eth_edge",
                        "wireless_edge"
                    ],
                    "type": "string"
                },
                "switchingCap": {
                    "type": "string"
                },
                "metric": {
                    "type": "string"
                },
                "maxResvBw": {
                    "type": "string"
                },
                "source": {
                    "type": "string",
                    "x-path": "/context/topology/nodes/node_id"
                },
                "localIfid": {
                    "type": "string",
                    "x-path": "/context/topology/nodes/edge_end/edge_end_id"
                },
                "remoteIfid": {
                    "type": "string",
                    "x-path": "/context/topology/nodes/edge_end/edge_end_id"
                },
                "unreservBw": {
                    "type": "string"
                },
                "target": {
                    "type": "string",
                    "x-path": "/context/topology/nodes/node_id"
                }
            }
        },
        "DwdmChannel": {
            "properties": {
                "state": {
                    "type": "integer",
                    "format": "int32"
                },
                "g694Id": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "DwdmEdge": {
            "allOf": [
                {
                    "$ref": "#/definitions/Edge"
                },
                {
                    "properties": {
                        "channels": {
                            "items": {
                                "$ref": "#/definitions/DwdmChannel"
                            },
                            "type": "array",
                            "x-key": "g694Id"
                        },
                        "bitmap": {
                            "$ref": "#/definitions/Bitmap"
                        }
                    }
                }
            ]
        },
        "Topology": {
            "properties": {
                "topologyId": {
                    "type": "string"
                },
                "underlayTopology": {
                    "items": {
                        "type": "string",
                        "description": "List of topologies from which this depends on."
                    },
                    "type": "array"
                },
                "nodes": {
                    "items": {
                        "$ref": "#/definitions/Node"
                    },
                    "type": "array",
                    "x-key": "nodeId"
                },
                "edges": {
                    "items": {
                        "$ref": "#/definitions/Edge"
                    },
                    "type": "array",
                    "x-key": "edgeId"
                }
            }
        },
        "ServiceEndpoint": {
            "description": "The End-Point represents the access to the forwarding (as Connection-End-Point) and/or adjacency (as Link-End-Point) function",
            "properties": {
                "edgeEndId": {
                    "type": "string",
                    "x-path": "/cop-topology:context/cop-topology:topology/cop-topology:nodes/cop-topology:edge_end/cop-topology:edge_end_id"
                },
                "name": {
                    "type": "string"
                },
                "endpointId": {
                    "type": "string",
                    "description": "Name of the endpoint, for example host1-port1"
                },
                "nodeId": {
                    "type": "string",
                    "x-path": "/cop-topology:context/cop-topology:topology/cop-topology:nodes/cop-topology:node_id"
                }
            }
        },
        "Connection": {
            "description": "The Connection represents an enabled potential for forwarding (including all circuit and packet forms) between two or more endpoints",
            "properties": {
                "controllerDomainId": {
                    "type": "string"
                },
                "contextId": {
                    "type": "string",
                    "x-path": "/cop-topology:context/cop-topology:context_id"
                },
                "trafficParams": {
                    "$ref": "#/definitions/TrafficParams"
                },
                "connectionId": {
                    "type": "string"
                },
                "zEnd": {
                    "$ref": "#/definitions/ServiceEndpoint"
                },
                "operStatus": {
                    "enum": [
                        "down",
                        "up"
                    ],
                    "type": "string",
                    "description": "Running status"
                },
                "aEnd": {
                    "$ref": "#/definitions/ServiceEndpoint"
                },
                "path": {
                    "$ref": "#/definitions/PathType"
                },
                "transportLayer": {
                    "$ref": "#/definitions/TransportLayerType"
                },
                "match": {
                    "$ref": "#/definitions/MatchRules"
                }
            }
        },
        "Label": {
            "description": "",
            "properties": {
                "labelType": {
                    "enum": [
                        "GMPLS_FIXED",
                        "GMPLS_FLEXI"
                    ],
                    "type": "string"
                },
                "labelValue": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "TrafficParams": {
            "description": "Basic Traffic Parameters to be offered within a Call",
            "properties": {
                "latency": {
                    "type": "integer",
                    "description": "Connection latency measured in ms",
                    "format": "int32"
                },
                "OSNR": {
                    "type": "number",
                    "description": "Optical Signal-to-noise ratio",
                    "format": "double"
                },
                "estimatedPLR": {
                    "type": "number",
                    "description": "Estimated packet loss ratio in %",
                    "format": "double"
                },
                "qosClass": {
                    "type": "string"
                },
                "reservedBandwidth": {
                    "type": "string",
                    "description": "Reserved Bandwidth measured in Mb/s i.e. 10, 100, 1000 Mb/s"
                }
            }
        },
        "MatchRules": {
            "description": "Match rules for call - OF match rules + extentions",
            "properties": {
                "mplsLabel": {
                    "type": "integer",
                    "format": "int32"
                },
                "ethType": {
                    "type": "integer",
                    "format": "int32"
                },
                "ipEcn": {
                    "type": "integer",
                    "format": "int32"
                },
                "icmpv4Type": {
                    "type": "integer",
                    "format": "int32"
                },
                "ethDst": {
                    "type": "string"
                },
                "vlanPcp": {
                    "type": "integer",
                    "format": "int32"
                },
                "ipv4Dst": {
                    "type": "string"
                },
                "arpTpa": {
                    "type": "integer",
                    "format": "int32"
                },
                "arpSha": {
                    "type": "integer",
                    "format": "int32"
                },
                "ipv6Exthdr": {
                    "type": "integer",
                    "format": "int32"
                },
                "includePath": {
                    "$ref": "#/definitions/PathType"
                },
                "icmpv6Type": {
                    "type": "integer",
                    "format": "int32"
                },
                "ipv6Src": {
                    "type": "string"
                },
                "mplsTc": {
                    "type": "integer",
                    "format": "int32"
                },
                "tunnelId": {
                    "type": "integer",
                    "format": "int32"
                },
                "sctpDst": {
                    "type": "integer",
                    "format": "int32"
                },
                "ethSrc": {
                    "type": "string"
                },
                "ipv6NdTarget": {
                    "type": "integer",
                    "format": "int32"
                },
                "tcpSrc": {
                    "type": "integer",
                    "format": "int32"
                },
                "ipv4Src": {
                    "type": "string"
                },
                "icmpv6Code": {
                    "type": "integer",
                    "format": "int32"
                },
                "mplsBos": {
                    "type": "integer",
                    "format": "int32"
                },
                "experimentalTeid": {
                    "type": "integer",
                    "format": "int64"
                },
                "ipv6NdTll": {
                    "type": "integer",
                    "format": "int32"
                },
                "sctpSrc": {
                    "type": "integer",
                    "format": "int32"
                },
                "udpDst": {
                    "type": "integer",
                    "format": "int32"
                },
                "pbbIsid": {
                    "type": "integer",
                    "format": "int32"
                },
                "ipv6Flabel": {
                    "type": "string"
                },
                "inPort": {
                    "type": "string"
                },
                "icmpv4Code": {
                    "type": "integer",
                    "format": "int32"
                },
                "ipDscp": {
                    "type": "integer",
                    "format": "int32"
                },
                "inPhyPort": {
                    "type": "string"
                },
                "ipProto": {
                    "type": "integer",
                    "format": "int32"
                },
                "arpTha": {
                    "type": "integer",
                    "format": "int32"
                },
                "arpSpa": {
                    "type": "integer",
                    "format": "int32"
                },
                "ipv6Dst": {
                    "type": "string"
                },
                "udpSrc": {
                    "type": "integer",
                    "format": "int32"
                },
                "arpOp": {
                    "type": "integer",
                    "format": "int32"
                },
                "ipv6NdSll": {
                    "type": "integer",
                    "format": "int32"
                },
                "vlanVid": {
                    "type": "integer",
                    "format": "int32"
                },
                "experimentalGmplsWsonLabel": {
                    "type": "integer",
                    "format": "int32"
                },
                "metadata": {
                    "type": "string"
                },
                "tcpDst": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "PathType": {
            "description": "The Path represents the individual routes of a Connection.",
            "properties": {
                "multiLayer": {
                    "type": "boolean"
                },
                "noPath": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "topoComponents": {
                    "items": {
                        "$ref": "#/definitions/ServiceEndpoint"
                    },
                    "type": "array",
                    "x-key": "endpointId"
                },
                "label": {
                    "$ref": "#/definitions/Label"
                }
            }
        },
        "Call": {
            "description": "A call represents an \u201cintent-request\u201d for connectivity within a Forwarding-Domain between the endpoints. Call is distinct from the Connection that realizes the Call.",
            "properties": {
                "contextId": {
                    "type": "string",
                    "x-path": "/cop-topology:context/cop-topology:context_id"
                },
                "operStatus": {
                    "enum": [
                        "down",
                        "up"
                    ],
                    "type": "string",
                    "description": "Running status"
                },
                "callId": {
                    "type": "string"
                },
                "zEnd": {
                    "$ref": "#/definitions/ServiceEndpoint"
                },
                "connections": {
                    "items": {
                        "$ref": "#/definitions/Connection"
                    },
                    "type": "array",
                    "x-key": "connectionId"
                },
                "trafficParams": {
                    "$ref": "#/definitions/TrafficParams"
                },
                "aEnd": {
                    "$ref": "#/definitions/ServiceEndpoint"
                },
                "transportLayer": {
                    "$ref": "#/definitions/TransportLayerType"
                },
                "match": {
                    "$ref": "#/definitions/MatchRules"
                }
            }
        },
        "TransportLayerType": {
            "description": "",
            "properties": {
                "action": {
                    "type": "string"
                },
                "layer": {
                    "type": "string"
                },
                "direction": {
                    "type": "string"
                },
                "layerId": {
                    "type": "string"
                }
            }
        },
        "ContextSchema": {
            "properties": {
                "contextId": {
                    "type": "string"
                },
                "parentContext": {
                    "type": "string",
                    "x-path": "/context/context_id"
                },
                "serviceEndpoint": {
                    "items": {
                        "$ref": "#/definitions/ServiceEndpoint"
                    },
                    "type": "array",
                    "x-key": "endpointId"
                },
                "topology": {
                    "items": {
                        "$ref": "#/definitions/Topology"
                    },
                    "type": "array",
                    "x-key": "topologyId"
                },
                "provider": {
                    "type": "boolean"
                }
            }
        }
    }
}